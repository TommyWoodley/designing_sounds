version: 2.1
orbs:
  python: circleci/python@2.1.1
  win: circleci/windows@5.0
  macos: circleci/macos@2
  linter: rdgozum/python@0.3.2
  reviewdog: yasuhiroki/reviewdog@0.0.3

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
commands:
  lint:
    parameters:
      lint_result_file_path:
        description: Lint result file path
        type: string
    steps:
      - checkout
      - run: |
          pip install pylint
          pylint ./src --output <<parameters.lint_result_file_path>> || true
          cat <<parameters.lint_result_file_path>>
      - store_artifacts:
          path: <<parameters.lint_result_file_path>>

jobs:
  test: # this can be any name you choose
    executor: python/default # use the default executor defined within the orb
    steps:
      - checkout # checkout source code
      - run:
          name: Python
          command: |
            python3 --version
            sudo apt-get update
            sudo apt-get install libasound-dev libportaudio2 libportaudiocpp0 portaudio19-dev -y
            python -m pip install pyaudio
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Run tests
          command: python -m pytest
  
  create-cli-windows:
    executor: python/default
    steps:
      - run:
          name: Build Windows CLI
          command: |
            echo "Nothing here but us chickens"
  
  create-cli-linux:
    executor: python/default
    steps:
      - run:
          name: Build Linux CLI
          command: |
            echo "Nothing here but us chickens"

  create-cli-mac:
    macos:
      xcode: 13.4.1
    resource_class: medium
    steps:
      - checkout
      - run:
          name: Installs
          command: |
            HOMEBREW_NO_AUTO_UPDATE=1 brew install portaudio
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Build Mac CLI
          command: |
            HOMEBREW_NO_AUTO_UPDATE=1 brew install python@3.10
            sudo pip3 install pyobjc
            cd build/mac
            ./build_mac.sh
            ls
      - persist_to_workspace:
          root: .
          paths:
            - build/mac/sounds.dmg

  
  publish-github-release:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: .
      - run:
          name: "Publish Release on GitHub"
          command: |
            cd build/mac
            let num=<< pipeline.number >>-88
            VER=v2.$num.0
            ghr -t "${GITHUB_TOKEN}" -u "${CIRCLE_PROJECT_USERNAME}" -r "${CIRCLE_PROJECT_REPONAME}" -c "${CIRCLE_SHA1}" -delete $VER ./sounds.dmg
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  create-cli:
    jobs:
      - reviewdog/reviewdog:
          linter_image: python
          reviewdog_format_option: '-f=rubocop'
          run_linter_steps:
            - lint:
                lint_result_file_path: res.txt
          lint_result_file_path: res.txt

      - test
      - create-cli-mac:
          requires:
            - test
          filters:
            branches:
              only:
                - main
      - create-cli-windows:
          requires:
            - test
          filters:
            branches:
              only:
                - main
      - create-cli-linux:
          requires:
            - test
          filters:
            branches:
              only:
                - main

      - publish-github-release:
          requires:
            - create-cli-mac
            - create-cli-windows
            - create-cli-linux
          filters:
            branches:
              only:
                - main

       # filter on main