<RootWave>:
    clear: clear_button
    play: play_button
    add: add_button
    all_power_spectrums: all_power_spectrum_button
    sd: sd
    mean: mean
    harmonic_samples: samples
    zoom: zoom
    panning: panning


    BoxLayout:
        size_hint: 1, 1
        orientation: 'vertical'
        pos: self.pos
        padding: 20

        BoxLayout:
            id: modulation
            size_hint: 1, 0.5

        BoxLayout:
            size_hint: 1, 0.5
            orientation: 'horizontal'

            BoxLayout:
                size_hint: 0.7, 1
                orientation: 'horizontal'

                BoxLayout:
                    size_hint: 0.6, 1
                    orientation: 'vertical'
                    BoxLayout:
                        id: power_spectrum
                        size_hint: 1, 0.9
                        padding: [0, 20, 20, 20]

                    BoxLayout:
                        id: power_spectrum_buttons
                        size_hint: 1, 0.1
                        orientation: 'horizontal'



                BoxLayout:
                    orientation: 'vertical'
                    size_hint: 0.4, 1
                    border: 1

                    BoxLayout:
                        size_hint: 1, 0.3
                        orientation: 'vertical'

                        Label:
                            text: 'Standard Deviation: ' + str(round(float(sd.value), 1))
                        Slider:
                            id: sd
                            value: 1
                            min: 0
                            max: 10
                            step: 0.1
                            on_value: root.update_power_spectrum(mean.value, sd.value, samples.value)
                    BoxLayout:
                        size_hint: 1, 0.3
                        orientation: 'vertical'
                        Label:
                            text: 'Frequency: ' + str(round(float(mean.value), 1)) + 'Hz'
                        Slider:
                            id: mean
                            value: 500
                            min: 0
                            max: 1000
                            step: 0.1
                            on_value: root.update_power_spectrum(mean.value, sd.value, samples.value)
                    BoxLayout:
                        size_hint: 1, 0.3
                        orientation: 'vertical'
                        Label:
                            text: 'Samples: ' + str(int(samples.value)) + '%'
                        Slider:
                            id: samples
                            value: 50
                            min: 0
                            max: 100
                            step: 1
                            on_value: root.update_power_spectrum(mean.value, sd.value, samples.value)

                    BoxLayout:
                        orientation: 'horizontal'

                        BoxLayout:
                            size_hint: 0.5, 1
                            orientation: 'vertical'
                            padding: 20
                            Button:
                                id: add_button
                                text: 'Add Harmonic'
                        BoxLayout:
                            size_hint: 0.5, 1
                            orientation: 'vertical'
                            padding: 20
                            Button:
                                id: all_power_spectrum_button
                                text: 'Display power spectrum'


            BoxLayout:
                size_hint: 0.3, 1
                orientation: 'vertical'
                BoxLayout:
                    size_hint: 1, 0.2
                    orientation: 'vertical'

                    Label:
                        text: 'Zoom: ' + str(zoom.value) + 'x'
                    Slider:
                        id: zoom
                        value: 1
                        min: 1
                        max: 10
                        step: 1
                        on_value: root.update_zoom(zoom.value, panning.value)


                BoxLayout:
                    size_hint: 1, 0.2
                    orientation: 'vertical'

                    Label:
                        text: 'Panning'
                    Slider:
                        id: panning
                        value: 0
                        min: 0
                        max: (10 / max(zoom.value, 1)) * (zoom.value - 1)
                        step: 1
                        on_value: root.update_panning(zoom.value, panning.value)

                BoxLayout:
                    size_hint: 1, 0.3
                    padding: 10
                    Button:
                        id: play_button
                        text: 'Play/Pause'

                BoxLayout:
                    size_hint: 1, 0.3
                    padding: 10
                    Button:
                        id: clear_button
                        text: 'Clear'







